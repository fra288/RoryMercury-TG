import random
from telegram.ext import CommandHandler, ContextTypes
from telegram import Update

class Colores:
    def __init__(self):
        self.colores_command = CommandHandler("colores", self.colores)

    async def colores(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        colores = ["rojo", "azul", "verde", "amarillo", "naranja", "morado", "rosado", "marr√≥n", "negro", "blanco", "gris", "cian", "magenta", "lima", "√≠ndigo", "violeta", "beige", "dorado", "plateado", "granate", "azul marino", "verde azulado", "oliva", "coral", "turquesa", "salm√≥n", "canela", "azul cielo", "lavanda", "melocot√≥n", "vino", "fucsia", "verde lima", "verde esmeralda", "azul celeste", "amarillo lim√≥n", "ocre", "azul petr√≥leo", "carb√≥n", "√°mbar", "menta", "terracota", "p√∫rpura", "chocolate", "pizarra", "cobre", "azafr√°n"]
        elegido = random.choice(colores)
        await update.message.reply_text("üé® Estoy pensando en un color... ¬øCu√°l crees que es? (Escribe tu respuesta)", reply_to_message_id=update.message.message_id)
        print("CMD | Comando /colores ejecutado.")

        def check(msg):
            return msg.text.lower() == elegido.lower() and msg.from_user.id == update.message.from_user.id

        try:
            msg = await context.bot.wait_for_message(timeout=15, filters=None, chat_id=update.effective_chat.id)
            if msg.text.lower() == elegido:
                await msg.reply_text("üéâ ¬°Correcto! Ese era el color.", reply_to_message_id=update.message.message_id)
            else:
                await msg.reply_text(f"‚ùå No era correcto. El color era {elegido}.", reply_to_message_id=update.message.message_id)
        except:
            await update.message.reply_text("‚è∞ Se acab√≥ el tiempo. Era " + elegido, reply_to_message_id=update.message.message_id)

def setup():
    return Colores()